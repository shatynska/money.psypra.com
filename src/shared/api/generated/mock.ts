/**
 * This file is AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
/* eslint-disable */
/* tslint:disable */
import { HttpResponse, http } from 'msw';

const baseURL = 'https://dro.psypra.com';
const MAX_ARRAY_LENGTH = 20;

let i = 0;
const next = () => {
  if (i === Number.MAX_SAFE_INTEGER - 1) {
    i = 0;
  }
  return i++;
};

export const handlers = [
  http.get(`${baseURL}/api/users/:idOrEmail`, () => {
    const resultArray = [
      [getUsersControllerFindOne200Response(), { status: 200 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.delete(`${baseURL}/api/users/:id`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/users`, () => {
    const resultArray = [[getUsersControllerMe200Response(), { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.put(`${baseURL}/api/users`, () => {
    const resultArray = [
      [getUsersControllerUpdateUser200Response(), { status: 200 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/api/cash-books/:id/reporting-periods`, () => {
    const resultArray = [[null, { status: 201 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/cash-books/current`, () => {
    const resultArray = [
      [getCashBooksControllerGetCurrentCashBooks200Response(), { status: 200 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/api/cash-books`, () => {
    const resultArray = [[null, { status: 201 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/cash-books/:id/cash-balance`, () => {
    const resultArray = [
      [getGetCashBalanceControllerGetCashBalance200Response(), { status: 200 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/api/auth/register`, () => {
    const resultArray = [
      [getAuthControllerRegister201Response(), { status: 201 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.post(`${baseURL}/api/auth/login`, () => {
    const resultArray = [
      [getAuthControllerLogin201Response(), { status: 201 }],
    ];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/auth/logout`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/auth/refresh-tokens`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/auth/google`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/auth/google/callback`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
  http.get(`${baseURL}/api/auth/success-google`, () => {
    const resultArray = [[null, { status: 200 }]];

    return HttpResponse.json(...resultArray[next() % resultArray.length]);
  }),
];

export function getUsersControllerFindOne200Response() {
  return {
    id: 'c0377617-9f36-489e-ba72-d462777987e9',
    email: 'test@gmail.com',
    roles: ['USER'],
  };
}

export function getUsersControllerMe200Response() {
  return {};
}

export function getUsersControllerUpdateUser200Response() {
  return {
    id: 'c0377617-9f36-489e-ba72-d462777987e9',
    email: 'test@gmail.com',
    roles: ['USER'],
  };
}

export function getCashBooksControllerGetCurrentCashBooks200Response() {
  return {
    reportingMonths: [2, 3, 4, 5, 7, 8, 9, 10, 11],
    membersWithMembershipFees: [
      {
        lastName: 'Зварицький',
        firstName: 'Олег',
        membershipFees: { reportingMonth: 3, amount: 350 },
      },
      {
        lastName: 'Денисюк',
        firstName: 'Жоржина',
        membershipFees: { reportingMonth: 2, amount: 150 },
      },
    ],
    expenses: [
      { date: '2022-11-27', amount: 385, details: 'Піца' },
      { date: '2022-12-13', amount: 520, details: 'Алкоголь' },
    ],
  };
}

export function getGetCashBalanceControllerGetCashBalance200Response() {
  return {
    value: 8420,
  };
}

export function getAuthControllerRegister201Response() {
  return {
    id: 'c0377617-9f36-489e-ba72-d462777987e9',
    email: 'test@gmail.com',
    roles: ['USER'],
  };
}

export function getAuthControllerLogin201Response() {
  return {
    accessToken:
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjBjMjg3NjE3LTlmMzYtNDg5ZS1iYTcyLWQ0NjI3Nzc5ODdlOSIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJyb2xlcyI6WyJVU0VSIiwiQURNSU4iXSwiaWF0IjoxNjk1OTI4NTc5LCJleHAiOjE2OTYwMTQ5Nzl9.VblvTacY29lbiE_IZl2bb6itQ8mCsgf4TZrk2bmdXnU',
  };
}
